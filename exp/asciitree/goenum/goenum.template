package {{Package}}

// IMPORTANT: This file was auto-generated by goenum.exe and should not be modified directly.
// Any changes made to this file will be overwritten the next time goenum.exe is run.
// This file was generated based on the original description file located at ./goenum/{{EnumType}}.goenum.
// The template used to generate this file can be found at ./goenum/goenum.template.
// To make changes to the enumeration, please update the original description file and re-run goenum.exe.
// The source code for goenum can be found here https://github.com/tpfeiffer67/goenum

import (
	"errors"
	"strings"
)

type {{EnumType}} int

const (
	{{EnumType}}Count = {{EnumCount}}
	{{EnumType}}MaxIndex = int({{EnumType}}{{EnumLastValue}})
	{{EnumType}}LastValue = {{EnumType}}{{EnumLastValue}}
)

const (
	{{#EnumValues}}{{EnumType}}{{Name}}{{#IsFirst}} {{EnumType}}{{/IsFirst}}{{#Value}} = {{Value}}{{/Value}}
	{{/EnumValues}}
)

func (v {{EnumType}}) String() string {
	return [...]string{
		{{#EnumValues}}"{{EnumType}}{{Name}}",
		{{/EnumValues}}
	}[v]
}

func {{EnumType}}FromString(s string) ({{EnumType}}, error) {
	var suffix string
	if strings.HasPrefix(s, "{{EnumType}}") {
		l := len("{{EnumType}}")
		if l < len(s) {
			suffix = s[l:]
		}
	} else {
		suffix = s
	}
	switch suffix {
	{{#EnumValues}}case "{{Name}}":
		return {{EnumType}}{{Name}}, nil
	{{/EnumValues}}
	}
	return {{EnumType}}(0), errors.New("String does not correspond to any existing {{EnumType}} values")
}
